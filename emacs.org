emacs

* 快捷键
** book marks
*** 书签命令速查表
| 快捷键  | 函数               | 介绍                                 |
|---------+--------------------+--------------------------------------|
| C-x r m | bookmark-set       | 在光标当前位置设置书签               |
| C-x r b | bookmark-jump      | 跳转到书签                           |
| nil     | bookmark-rename    | 重命名书签                           |
| nil     | bookmark-delete    | 删除一个书签                         |
| C-x r l | bookmark-menu-list | 进入*bookmark list*编辑缓冲区        |
| nil     | bookmark-insert    | 插入与给定书签关联着的文件的完整内容 |
| nil     | bookmark-write     | 把全部书签保存到指定文件里           |
| nil     | bookmark-load      | 从指定文件里加载书签                 |

*** 书单清单编辑命令速查表
| 命令 | 动作                                                             |
|------+------------------------------------------------------------------|
| d    | 给书签加上待删除标记                                             |
| r    | 对书签重命名                                                     |
| s    | 保存书签里的全部书签                                             |
| f    | 显示光标位置上的标签                                             |
| m    | 给书签加上待显示标记                                             |
| v    | 显示加有带显示的书签。如果没有待显示的就显示光标所在处的那个标签 |
| t    | 切换书签关联文件的存放位置                                       |
| w    | 显示书签关联文件的存放位置                                       |
| x    | 删除加有待删除标记的书签                                         |
| q    | 退出书签清单                                                     |

** shell 命令

| 快捷键    | 函数                        | 动作                                                |
|-----------+-----------------------------+-----------------------------------------------------|
| C-c C-c   | comint-interrput-subjob     | 中断当前输入                                        |
| C-d       | comint-delchar-or-maybe-eof | 在编辑缓冲区末尾时送出EOF；若在其他位置删除一个字符 |
| C-c C-d   | comint-send-eof             | 送出EOF                                             |
| C-c C-u   | comint-kill-input           | 删除当前行                                          |
| M-p       | comint-previous-input       | 检索上一个命令                                      |
| M-n       | comint-next-input           | 检索下一个命令                                      |
| C-c C-o   | comint-kill-output          | 删除最后一条命令的输出                              |
| C-c C-r   | comint-show-output          | 把输出内容的第一行移动到窗口的顶部                  |
| C-c C-e   | comint-show-maximun-output  | 把输出内容的最后一行移动到窗口底部                  |
| C-c C-n/p | comint-previous/next-prompt | 移动到前/后一条命令                                 |
|           |                             |                                                     |

** dired
| 快捷键 | 函数                    | 动作                                     |
|--------+-------------------------+------------------------------------------|
| % m    | dired-mark-files-regexp | 给匹配这个正则表达式的文件加上待操作标记 |
| % d    | dired-flag-files-regexp | 给匹配这个正则表达式的文件加上待删除标记 |
|        |                         |                                          |

* need to install [0/2]
+ [ ] find-file-project
+ [ ] multi cuorsor
* config
** gui下的配置
spacemace 和 prelude感觉都可以
** 临时的emacs为了更加顺手
#+BEGIN_SRC emacs-lisp
;;-------------------------------better default------------------------------------------

;;在行首执行C-k时将该行删除
(setq-default kill-whole-line t)

;;设定不产是备份文件
(setq make-backup-files nil)
(setq auto-save-mode nil)

;;显示行列号
;;(global-linum-mode t)
;;关闭蜂鸣声
(setq ring-bell-function 'ignore)

;;高亮显示当前行
;(global-hl-line-mode t)

;;缩进问题
(setq indent-tabs-mode nil) ;;不插入tab字符，因为TAB是邪恶的;实在需要TAB键则用C-q TAB
(setq default-tab-width 4) ;;每次缩进4个空格
(setq tab-width 4)

;;abbrev-table
(define-abbrev-table 'global-abbrev-table '(
											;;("zm" "c:/Users/zhanghao/Desktop")
											))
;;hipppie-expend
(setq hippie-expand-try-functions-list '(try-expand-dabbrev
										 try-expand-dabbrev-all-buffers
										 try-expand-dabbrev-from-kill
										 try-complete-file-name-partially
										 try-complete-file-name
										 try-expand-all-abbrevs
										 try-expand-list
										 try-expand-line
										 try-complete-lisp-symbol-partially
										 try-complete-lisp-symbol
										 ))

;;激活 C-x C-j 来打开文件所在目录
(require 'dired-x)
;;yes-no --> y-n
(fset 'yes-or-no-p 'y-or-n-p)
;;选中替换模式
(delete-selection-mode t)
;;
(menu-bar-mode 0)
(blink-cursor-mode 0)
;;dired mode
(setq dired-recursive-deletes 'always)
(setq dired-recursive-copies 'always)

;;hook
(add-hook 'c-mode-common-hook 'hs-minor-mode)  ;在c-mode下将hs-minor-mode打开
(add-hook 'emacs-lisp-mode-hook 'show-paren-mode)
;;--------------------------------------------------ui设置------------------------------------------------------
(setq visible-bell t)
;;关闭烦人的错误提示音

;;去掉工具栏 和 滚动条
(tool-bar-mode 0)
(scroll-bar-mode 0)
;;关闭guns启动时的画面
(setq inhibit-startup-message t)

;;关闭guns启动时的画面
(setq gnus-inhibit-startup-message t)

;;设置主题
;;(load-theme 'monokai t)

;(setq-default cursor-type 'box)
(setq blink-cursor-mode nil)

;;----------------------------defun myself---------------------------
;;格式化整个文件函数09
(defun indent-buffer ()
  "Indent the whole buffer."
  (interactive)
  (save-excursion
	(indent-region (point-min) (point-max) nil)))
(defun open-my-init-file()
  (interactive)
  ;;(find-file "c:/Users/zhanghao/AppData/Roaming/dailyRecord/agenda.org")
  (find-file "~/.emacs"))
;;类似于vim 中的o的功能
(defun nextline()
  (interactive)
  (message "move to end of line")
  (move-end-of-line nil)
  (newline-and-indent)
  )
;;隐藏文件系统中的^M符号
;; (defun hidden-dos-eol ()
;;   "do not show ^M in this file"
;;   (interactive)
;;   (setq buffer-display-table (make-display-table))
;;   (aset buffer-display-table ?/^M [])
;;   )
;;删除unix文件系统中的^M符号
(defun remove-dos-elo ()
  "Replace DOS end od lines CR with Unix eolns CR"
  (interactive)
  (goto-char (point-min))
  (while (search-forward "\r" nil t) (replace-match ""))
  )
;;-----------------------------key bandings (kbd)----------------------
(global-set-key (kbd "M-/") 'hippie-expand)
(global-set-key (kbd "M-s i") 'counsel-imenu)
(global-set-key (kbd "M-SPC") 'set-mark-command)
(global-set-key (kbd "RET") 'newline-and-indent)
(global-set-key (kbd "<f2>") 'open-my-init-file)
(global-set-key (kbd "C-S-d") 'kill-whole-line)
(global-set-key (kbd "C-o") 'nextline)
(global-set-key (kbd "C-<") 'shrink-window-horizontally)
(global-set-key (kbd "C->") 'enlarge-window-horizontally)
(global-set-key (kbd "C-x C-r") 'counsel-recentf)  ;;打开最近打开文件
(global-set-key [f5] 'hs-toggle-hiding) ;;折叠开启开关
(global-set-key [f6] 'indent-buffer) ;;格式化整个buffer
(global-set-key (kbd "C-v") 'er/expand-region) ;;C-v选中单词

;;----------------------------bind my key like spacemace----------------
(define-prefix-command 'ctl-j-map)
(global-set-key (kbd "C-j") 'ctl-j-map)
(bind-keys :prefix-map buffer-prefix-map
              :prefix "C-j b"
              ("b" . ivy-switch-buffer)
              ("k" . kill-this-buffer)
			  )


(bind-keys :prefix-map file-prefix-map
              :prefix "C-j f"
              ("f" . counsel-find-file)
              ("k" . kill-this-buffer))


#+END_SRC
